# FluxStack Backend-Only Docker Image
FROM oven/bun:1.1-alpine AS base

WORKDIR /app

# Install dependencies
COPY package.json bun.lockb* bunfig.toml ./
RUN bun install --frozen-lockfile

# Copy source code (only what backend needs)
COPY core/ ./core/
COPY app/server/ ./app/server/
COPY app/shared/ ./app/shared/
COPY config/ ./config/

# Production stage
FROM oven/bun:1.1-alpine AS production

WORKDIR /app

# Install production dependencies
COPY package.json bun.lockb* bunfig.toml ./
RUN bun install --frozen-lockfile --production

# Copy backend files
COPY --from=base /app/core ./core
COPY --from=base /app/app/server ./app/server
COPY --from=base /app/app/shared ./app/shared
COPY --from=base /app/config ./config

# Create non-root user
RUN addgroup -g 1001 -S fluxstack && \
    adduser -S fluxstack -u 1001
RUN chown -R fluxstack:fluxstack /app
USER fluxstack

# Environment for backend-only
ENV NODE_ENV=production
ENV BACKEND_PORT=3001
ENV FLUXSTACK_MODE=backend

# Health check for backend API
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD bun run -e "fetch('http://localhost:3001/health').then(r => r.ok ? process.exit(0) : process.exit(1))" || exit 1

EXPOSE 3001

# Start backend only
CMD ["bun", "run", "dev:backend"]