{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(bun init:*)",
      "Bash(mkdir:*)",
      "Bash(bun create:*)",
      "Bash(bun install:*)",
      "Bash(bun run:*)",
      "Bash(bun add:*)",
      "Bash(NODE_ENV=production bun run start)",
      "Bash(NODE_ENV=production bun run dist/index.js)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(diff:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "Bash(timeout:*)",
      "Bash(docker:*)",
      "Bash(curl:*)",
      "Bash(npm run dev:*)",
      "Bash(bun core/cli/index.ts dev)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(bun:*)",
      "Bash(vite build:*)",
      "Bash(tsc --noEmit)",
      "WebSearch",
      "WebFetch(domain:elysiajs.com)",
      "Bash(tree:*)",
      "Bash(git checkout:*)",
      "Bash(npx tailwindcss init:*)",
      "Bash(pkill:*)",
      "Bash(taskkill:*)",
      "Bash(npx eslint:*)",
      "Bash(export NODE_ENV=production)",
      "WebFetch(domain:vite.dev)",
      "Bash(git restore:*)",
      "Bash(NODE_ENV=production bun run app/server/index.ts)",
      "Bash(NODE_ENV=production bun dist/index.js)",
      "Bash(NODE_ENV=production bun run build)",
      "Bash(chmod:*)",
      "Bash(./flux-cli.ts:*)",
      "Bash(./create-fluxstack.ts divine-app)",
      "Bash(./create-fluxstack.ts divine-app-fixed)",
      "Bash(NODE_ENV=development bun run dev)",
      "Bash(./create-fluxstack.ts meu-app-teste)",
      "Bash(npm whoami:*)",
      "Bash(npm publish:*)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto/**)",
      "Bash(cat:*)",
      "Bash(./create-fluxstack.ts teste-corrigido)",
      "Bash(./create-fluxstack.ts teste-v103)",
      "Bash(./create-fluxstack.ts my-final-test)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-npm-global/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-npm-global/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-npm-global/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-cli-update\\ai-context/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-cli-update/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-cli-update/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-gitignore/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-plugins-guide/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-plugins-guide\\ai-context\\development/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-env-fix/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\final-test/**)",
      "Bash(npm pkg:*)",
      "Bash(git push:*)",
      "WebFetch(domain:livewire.laravel.com)",
      "WebFetch(domain:zustand.docs.pmnd.rs)",
      "Bash(node:*)",
      "Bash(BUILD_MINIFY=false bun run build)",
      "Bash(NODE_ENV=production bun index.js)",
      "Bash(git log:*)",
      "Bash(git tag:*)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-temporal-bridge/**)",
      "Read(/C:\\Users\\Marcos\\Documents\\GitHub\\aviso-projeto\\test-temporal-bridge/**)",
      "Read(//c/Users/Marcos/Documents/GitHub/PROJETO-OHANA/BackEnd/src/utils/**)",
      "Bash(bunx tsc:*)",
      "Bash(echo:*)"
    ],
    "deny": []
  }
}