# FluxStack Frontend-Only Docker Image
FROM oven/bun:1.1-alpine AS base

WORKDIR /app

# Install dependencies
COPY package.json bun.lockb* bunfig.toml ./
RUN bun install --frozen-lockfile

# Copy frontend source
COPY app/client/ ./app/client/
COPY app/shared/ ./app/shared/
COPY core/client/ ./core/client/
COPY core/config/ ./core/config/
COPY core/utils/ ./core/utils/

# Build frontend for production
COPY config/ ./config/
RUN cd app/client && bun run build

# Production stage with nginx for serving static files
FROM nginx:alpine AS production

# Copy built frontend
COPY --from=base /app/app/client/dist /usr/share/nginx/html

# Copy nginx config for SPA routing
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Handle client-side routing
    location / {
        try_files \$uri \$uri/ /index.html;
    }

    # API proxy (if needed)
    location /api/ {
        proxy_pass \$API_URL;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

# Environment for frontend-only
ENV API_URL=http://backend:3001

EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

CMD ["nginx", "-g", "daemon off;"]